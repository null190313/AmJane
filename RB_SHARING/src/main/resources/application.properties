server.port=8097
#server.address=
logging.level.org.lxrookie.start.substance.dao=debug




spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
spring.datasource.username=AMJANE
spring.datasource.password=AMJANE
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver


security.basic.enabled=false
#security.oauth2.client.client-id=webapp
#security.oauth2.client.client-secret=secret
#获取访问令牌的 URI
#security.oauth2.client.access-token-uri=http://localhost:8081/oauth/token
#用户将被重定向到的授权 URI
#security.oauth2.client.user-authorization-uri=http://localhost:8081/oauth/authorize
#用于获取当前用户的详细信息
#security.oauth2.resource.user-info-uri=http://localhost:8110/oauth/user




spring.freemarker.prefix=
spring.freemarker.suffix=.htm
spring.freemarker.cache=false
spring.freemarker.allow-session-override=false
spring.freemarker.allow-request-override=false
spring.freemarker.content-type=text/html
spring.freemarker.charset=UTF-8
flyway.enabled=false
spring.freemarker.request-context-attribute=req
spring.freemarker.template-loader-path=classpath:/templets/
spring.freemarker.check-template-location=false

spring.thymeleaf.cache=false
spring.thymeleaf.check-template=false
spring.thymeleaf.prefix=classpath:/templets/
spring.thymeleaf.suffix=.htm
spring.thymeleaf.check-template-location=false
spring.thymeleaf.encoding=UTF-8


# kafka服务器地址
spring.kafka.bootstrap-servers=127.0.0.1:9092
# 指定一个默认的组名
spring.kafka.consumer.group-id=kafka-consumer
spring.kafka.template.default-topic=default-topic
# earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
# latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
# none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.enable-auto-commit=true
# key/value的反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.listener.concurrency=3






